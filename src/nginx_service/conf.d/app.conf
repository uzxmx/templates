# vi: ft=nginx
#
# For more information, please visit http://nginx.org/en/docs/.

server {
  listen 80;

  server_name example.com www.example.com;

  access_log /dev/stdout;
  error_log /dev/stderr;

  root /site;

  location /static/ {
    # `gzip_static` works when there is a gzipped file at the same location with the `.gz` extension suffix.
    #
    # When `gzip_static` is `on`, client needs to specify `Accept-Encoding: gzip` to make the server return the
    # gzipped resource. But when it is `always`, the gzipped resource is always returned no matter whether the
    # client supports it.
    #
    # If the returned resource is gzipped, `Content-Encoding: gzip` header will be present in the response.
    #
    # Ref: http://nginx.org/en/docs/http/ngx_http_gzip_static_module.html
    #
    # NOTE: If this server is a backend, the front proxy must be configured
    # with `proxy_http_version 1.1`. Otherwise, the response may not be
    # gzipped.
    #
    gzip_static on;
    # gzip_static always;

    expires max;
    add_header Cache-Control public;
  }

  # Forward all requests to a host service for Mac OSX.
  location / {
    include /etc/nginx/include.d/cors.inc;

    # If the upstream is able to generate gzipped response, we need to set the
    # http version to 1.1. Otherwise, the response may not be gzipped.
    # See https://serverfault.com/a/834314
    proxy_http_version 1.1;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    # This is needed to resolve DNS names.
    resolver 127.0.0.11;

    # Use variable to let nginx start even though upstream host is unavailable or down.
    set $upstream host.docker.internal:80;

    proxy_pass http://$upstream;
  }

  # Forward all requests starting with `/api/` to `api_host:8080`.
  location ~ ^/api/(.*)$ {
    set $path $1;

    ## This doesn't work with $upstream variable.
    # rewrite /api/(.*) /$1 break;

    # If the upstream is able to generate gzipped response, we need to set the
    # http version to 1.1. Otherwise, the response may not be gzipped.
    # See https://serverfault.com/a/834314
    proxy_http_version 1.1;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    # Use variable to let nginx start even though upstream host is unavailable or down.
    set $upstream api_host:8080;
    proxy_pass http://$upstream/$path$is_args$args;
  }

  # Redirect for a specific path.
  location = /bar {
    return 301 http://example.com/redirected;
  }
}
