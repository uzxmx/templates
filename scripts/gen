# vi: ft=sh
#
# This file is sourced in $dotfiles_dir/bin/gen.

gen_bin_wrapper() {
  gen -d "$HOME/.dotfiles/bin" -p -e -x bin_wrapper
}

gen_install() {
  gen -d "$HOME/.dotfiles/scripts/install" -p -e -x install
}

gen_license() {
  gen LICENSE
}

gen_readme() {
  gen -e README.md
}

gen_vagrantfile() {
  gen -e Vagrantfile
}

gen_launched() {
  gen -d "$HOME/Library/LaunchAgents" -p -e --ext plist launchd.plist
}

gen_autossh() {
  gen -f "$HOME/Library/LaunchAgents/autossh.plist" -e autossh.plist
}

gen_appium() {
  gen -f "$HOME/Library/LaunchAgents/appium.plist" -e appium.plist
}

gen_ssh_hosts() {
  gen -e -f "$HOME/.ssh_hosts" ssh_hosts
}

gen_mvn_settings() {
  gen -e -f "$HOME/.m2/settings.xml" mvn_settings.xml
}

gen_editorconfig() {
  gen -e -f .editorconfig editorconfig
}

gen_password() {
  source "$dotfiles_dir/scripts/lib/utils/random.sh"
  local password="$(random_string 15)"
  echo "$password"
  echo
  echo -n "$password" | cb --log-level short
}

gen_uuid() {
  source "$dotfiles_dir/scripts/lib/prompt.sh"
  local reply="$(yesno "Keep dash? (Y/n)" "yes")"
  local cmd="uuidgen | tr A-Z a-z"
  local uuid
  if [ "$reply" = "yes" ]; then
    uuid="$(eval $cmd)"
  else
    uuid="$(eval $cmd | sed -e 's/\-//g')"
  fi
  echo
  echo "$uuid"
  echo
  echo -n "$uuid" | cb --log-level short
}

gen_zshrc_local() {
  gen -e -f "$HOME/.zshrc.local" zshrc.local
}

gen_nginx_service() {
  gen --ask-filename --ask-filename-default "nginx" nginx_service
}

gen_mysql_service() {
  gen --ask-filename --ask-filename-default "mysql" mysql_service
}

gen_react_spa() {
  if ! type npx &>/dev/null; then
    echo 'Cannot find npx. You can visit https://github.com/facebook/create-react-app for more help.'
    exit 1
  fi

  local name
  source "$dotfiles_dir/scripts/lib/prompt.sh"
  while true; do
    ask_for_input name "Project name: " my-app
    if [ ! -e "$(pwd)/$name" ]; then
      break
    fi
    echo "File $(pwd)/$name already exists."
    unset name
  done
  npx create-react-app "$name"
}

gen_export_options() {
  if [ "$#" -gt 0 ]; then
    gen "$@" ExportOptions.plist
  else
    gen -e ExportOptions.plist
  fi
}

source "$(dirname "$BASH_SOURCE")/gen_java"

FZF_COMMANDS="Bin wrapper or plain old executable\tgen_bin_wrapper
Installation script\tgen_install
MIT license\tgen_license
README.md or Markdown template\tgen_readme
Vagrantfile\tgen_vagrantfile
Mac OSX User daemon/agent plist file\tgen_launched
SSH hosts for wrapper utility\tgen_ssh_hosts
Maven settings\tgen_mvn_settings
Editor config\tgen_editorconfig
Autossh plist file for Mac OSX\tgen_autossh
Appium plist file for Mac OSX\tgen_appium
Random string, password, etc.\tgen_password
UUID\tgen_uuid
Local zshrc\tgen_zshrc_local
Nginx docker-compose service\tgen_nginx_service
Mysql docker-compose service\tgen_mysql_service
React single-page application\tgen_react_spa
Xcode export options plist\tgen_export_options
Java JUnit 4 test\tgen_java Test.java
Java JUnit 4 Spring controller test\tgen_java ControllerTest.java
Java JUnit 4 Spring boot test\tgen_java SpringBootTest.java"
